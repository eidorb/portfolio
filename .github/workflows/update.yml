name: update
on:
  # Schedule a run approximately every 10 days of the month. This is more varied
  # than say the same day each week. Trigger events can be delayed during  times
  # of high load (e.g., on the hour), so use a random non-zero minute value.
  schedule:
    - cron: "35 0 1,11,21 * *"
  workflow_dispatch:
# Grant workflow permissions to write to this (portfolio) repository. This allows
# updated secrets to be commited if necessary.
permissions:
  contents: write
jobs:
  update-portfolio:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/checkout@v4
        with:
          repository: eidorb/portfolio-ledger
          path: portfolio-ledger
          # Use personal access token that grants permissions to write to portfolio-ledger repository.
          token: ${{ secrets.TOKEN }}
      - id: cache
        uses: actions/cache@v4
        with:
          # Use contents of Mamba environment file and Poetry lock file as cache key.
          key: ${{ hashFiles('environment.yml', 'poetry.lock') }}
          # Cache micromamba binary, .bashrc, Poetry installation, Mamba environment,
          # and Playwright browser cache.
          path: |
            ./bin/micromamba
            ~/.bashrc
            ~/.local/bin/poetry
            ~/.local/share/pypoetry
            ~/micromamba/envs/portfolio
            ~/.cache/ms-playwright
      - if: steps.cache.outputs.cache-hit != 'true'
        run: |
          # Install micromamba.
          wget -qO- https://micro.mamba.pm/api/micromamba/linux-64/latest | tar -xvj bin/micromamba
          ./bin/micromamba shell hook > ~/.bashrc

          # Install Poetry.
          curl -sSL https://install.python-poetry.org | python3 - --version 1.7.1

          # Create Mamba environment.
          source ~/.bashrc
          micromamba create --file environment.yml --yes
          micromamba activate portfolio

          # Install Python package dependencies.
          poetry install

          # Install Firefox for Playwright.
          python -m playwright install --with-deps firefox
      - run: |
          source ~/.bashrc
          micromamba activate portfolio

          # Unlock git-crypt.
          echo $GIT_CRYPT_KEY | base64 -d | git-crypt unlock -

          # Configure time zone so that fetched prices have the correct date.
          sudo timedatectl set-timezone Australia/Queensland

          # Configure Tailscale to use valery as exit node.
          curl -fsSL https://tailscale.com/install.sh | sh
          sudo tailscale up \
            --advertise-tags=tag:github-actions \
            --authkey "${TAILSCALE_OAUTH_CLIENT_SECRET}?ephemeral=true&preauthorized=true" \
            --hostname "github-actions-network-$(cat /etc/hostname)" \
            --stateful-filtering=false
          # This must be done after connecting to resolve exit node's machine name.
          sudo tailscale set --exit-node valery

          # Update balances and prices in ledger.
          cd portfolio-ledger
          update-balances
          bean-price --inactive --date $(date -I) portfolio.beancount >> prices.beancount 2>/dev/null

          sudo tailscale logout

          # Commit changes to portfolio-ledger repository.
          git config --global user.name "GitHub Actions"
          git config --global user.email "$GITHUB_JOB@$GITHUB_REPOSITORY"
          git add balances.beancount
          git add prices.beancount
          git status
          git commit -m "Update portfolio from $GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID"
          git push

          # Commit updated secrets to portfolio repository.
          cd ..
          git add portfolio/secrets.py
          git status
          git commit -m "Update secrets from $GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID"
          git push
        env:
          GIT_CRYPT_KEY: ${{ secrets.GIT_CRYPT_KEY }}
          TAILSCALE_OAUTH_CLIENT_SECRET: ${{ secrets.TAILSCALE_OAUTH_CLIENT_SECRET }}
