name: test
on:
  # Schedule approximately fortnightly test runs.
  schedule:
    - cron: "0 0 1,15 * 0"
  # Allow workflow to be run manually.
  workflow_dispatch:
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - id: cache
        uses: actions/cache@v4
        with:
          # Use contents of Mamba environment file, NPM lock file and Poetry lock file as cache key.
          key: ${{ hashFiles('environment.yml', 'package-lock.json', 'poetry.lock') }}
          # Cache micromamba binary, environments, pipx installs and Playwright browser cache.
          path: |
            ./bin/micromamba
            ~/micromamba/envs
            ~/.local/pipx
            ~/.cache/ms-playwright
      - if: steps.cache.outputs.cache-hit != 'true'
        run: |
          # Install micromamba.
          wget -qO- https://micro.mamba.pm/api/micromamba/linux-64/latest | tar -xvj bin/micromamba
          ./bin/micromamba shell hook > ~/.bashrc

          # Install Poetry.
          pipx install poetry~=1.8

          # Create Mamba environment.
          eval "$(./bin/micromamba shell hook -s posix)"
          micromamba create --file environment.yml --yes
          micromamba activate portfolio

          # Install Python package dependencies.
          poetry install

          # Install Firefox for Playwright.
          python -m playwright install --with-deps firefox
      - run: |
          eval "$(./bin/micromamba shell hook -s posix)"
          micromamba activate portfolio

          # Unlock git-crypt.
          echo $GIT_CRYPT_KEY | base64 -d | git-crypt unlock -

          # Configure Tailscale to use valery as exit node.
          curl -fsSL https://tailscale.com/install.sh | sh
          sudo tailscale up \
            --advertise-tags=tag:github-actions \
            --authkey "${TAILSCALE_OAUTH_CLIENT_SECRET}?ephemeral=true&preauthorized=true" \
            --hostname "github-actions-network-$(cat /etc/hostname)" \
            --stateful-filtering=false
          # This must be done after connecting to resolve exit node's machine name.
          sudo tailscale set --exit-node valery

          # Test
          pytest tests

          sudo tailscale logout
        env:
          GIT_CRYPT_KEY: ${{ secrets.GIT_CRYPT_KEY }}
          TAILSCALE_OAUTH_CLIENT_SECRET: ${{ secrets.TAILSCALE_OAUTH_CLIENT_SECRET }}
