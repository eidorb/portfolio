title: Portfolio
description_html: |
  <link href="/-/static-plugins/datasette_dashboards/dashboards.css" rel="stylesheet">
  <style>
  @media (min-width: 800px) {
      .dashboard-grid {

        grid-template-columns: repeat(2, 1fr);

      }


    }
  </style>
  <div class="dashboard-grid">
  <div class="dashboard-card" id="card-total">
    <div class="dashboard-card-title">
    <p>
      <a href="/-/dashboards/portfolio/total">
      Total value
      </a>
      <span class="chart-tooltip" id="chart-tooltip-total" title="SQL query returning more than 1000 rows">
      ⚠️
      </span>
    </p>
    </div>
    <div class="dashboard-card-chart" id="chart-total">
    </div>
  </div>
  <div class="dashboard-card" id="card-change">
    <div class="dashboard-card-title">
    <p>
      <a href="/-/dashboards/portfolio/change">
      Change required to reach target allocation
      </a>
      <span class="chart-tooltip" id="chart-tooltip-change" title="SQL query returning more than 1000 rows">
      ⚠️
      </span>
    </p>
    </div>
    <div class="dashboard-card-chart" id="chart-change">
    </div>
  </div>
  <div class="dashboard-card" id="card-rebalance">
    <div class="dashboard-card-title">
    <p>
      <a href="/-/dashboards/portfolio/rebalance">
      Actions required to rebalance
      </a>
      <span class="chart-tooltip" id="chart-tooltip-rebalance" title="SQL query returning more than 1000 rows">
      ⚠️
      </span>
    </p>
    </div>
    <div class="dashboard-card-chart" id="chart-rebalance">
    </div>
  </div>
  <div class="dashboard-card" id="card-value">
    <div class="dashboard-card-title">
    <p>
      <a href="/-/dashboards/portfolio/value">
      Asset value over time
      </a>
      <span class="chart-tooltip" id="chart-tooltip-value" title="SQL query returning more than 1000 rows">
      ⚠️
      </span>
    </p>
    </div>
    <div class="dashboard-card-chart" id="chart-value">
    </div>
  </div>
  </div>
  <script src="/-/static-plugins/datasette-leaflet/leaflet-v1.7.1.js" type="module">
  </script>
  <script src="/-/static-plugins/datasette_dashboards/vega.min.js">
  </script>
  <script src="/-/static-plugins/datasette_dashboards/vega-lite.min.js">
  </script>
  <script src="/-/static-plugins/datasette_dashboards/vega-embed.min.js">
  </script>
  <script src="/-/static-plugins/datasette_dashboards/dashboards.js">
  </script>
  <script type="text/javascript">
  renderChart('total', {"db": "portfolio", "display": {"field": "total"}, "library": "metric", "query": "select printf(\u0027$%,d\u0027, total) as total from change", "title": "Total value"}, '', 'https://portfolio.brodie.id.au/')

      renderChart('change', {"db": "portfolio", "display": {"encoding": {"color": {"condition": {"test": "datum.change\u003e0", "value": "limegreen"}, "value": "red"}, "x": {"axis": null, "field": "change", "stack": null, "type": "quantitative"}, "y": {"axis": null, "field": "asset", "sort": null, "type": "nominal"}}, "layer": [{"mark": "bar"}, {"encoding": {"color": {"value": "black"}, "text": {"field": "asset"}, "x": {"datum": 0}}, "mark": {"align": {"expr": "datum.change\u003e0?\u0027right\u0027:\u0027left\u0027"}, "dx": {"expr": "datum.change\u003e0?-4:4"}, "type": "text"}}, {"encoding": {"color": {"value": "black"}, "text": {"field": "change", "format": ".1%"}}, "mark": {"align": {"expr": "datum.change\u003e0?\u0027left\u0027:\u0027right\u0027"}, "dx": {"expr": "datum.change\u003e0?4:-4"}, "type": "text"}}]}, "library": "vega-lite", "query": "select * from change order by change desc", "title": "Change required to reach target allocation"}, '', 'https://portfolio.brodie.id.au/')

      renderChart('rebalance', {"db": "portfolio", "library": "table", "query": "select\n  format(\u0027%s\u0027, asset) as \u0027Asset\u0027,\n  case\n    when asset = \u0027BTC\u0027 then format(\u0027%.4f\u0027, value / price_aud)\n    else format(\u0027%,d\u0027, value / price_aud)\n  end as \u0027Amount\u0027,\n  format(\u0027%.0f %%\u0027, target * 100) as \u0027Target\u0027,\n  format(\u0027%.1f %% ($%,d)\u0027, actual * 100, value) as \u0027Actual\u0027,\n  format(\u0027%.1f %% ($%,d)\u0027, change * 100, change_value) as \u0027Change required\u0027,\n  case\n    -- No actions for cash.\n    when asset = \u0027Cash\u0027 then \u0027\u0027\n    when change \u003e 0 then format(\n      \u0027\u003cspan style=\"color: limegreen\"\u003eBuy\u003c/span\u003e %s %s\u0027,\n      iif(\n        asset = \u0027BTC\u0027,\n        format(\u0027%.4f\u0027, abs(change_amount)),\n        format(\u0027%.0f\u0027, abs(change_amount))\n      ),\n      asset,\n      iif(\n        asset = \u0027BTC\u0027,\n        abs(round(change_amount, 5) * price_aud),\n        abs(round(change_amount) * price_aud)\n      )\n    )\n    else format(\n      \u0027\u003cspan style=\"color: red\"\u003eSell\u003c/span\u003e %s %s\u0027,\n      iif(\n        asset = \u0027BTC\u0027,\n        format(\u0027%.4f\u0027, abs(change_amount)),\n        format(\u0027%.0f\u0027, abs(change_amount))\n      ),\n      asset,\n      iif(\n        asset = \u0027BTC\u0027,\n        abs(round(change_amount, 5) * price_aud),\n        abs(round(change_amount) * price_aud)\n      )\n    )\n  end as \u0027Action\u0027\nfrom\n  change\norder by\n  abs(change) desc\n", "title": "Actions required to rebalance"}, '', 'https://portfolio.brodie.id.au/')

      renderChart('value', {"db": "portfolio", "display": {"encoding": {"color": {"field": "Asset", "scale": {"scheme": "pastel1"}, "sort": {"field": "rank", "order": "descending"}}, "order": {"field": "rank"}, "x": {"field": "date", "timeUnit": "yearmonthdate", "title": "Date"}, "y": {"aggregate": "sum", "axis": {"labelExpr": "\u0027$\u0027+datum.label"}, "field": "value", "title": "Value"}}, "mark": {"opacity": 0.85, "type": "area"}}, "library": "vega-lite", "query": "select\n  date,\n  normalised_balance_aud.asset as Asset,\n  round(sum(value_number)) as value,\n  target_allocation.rowid as rank\nfrom\n  normalised_balance_aud\n  join target_allocation on normalised_balance_aud.asset = target_allocation.asset\nwhere\n  account not like \u0027Liabilities:StateCustodians:%\u0027\ngroup by\n  date,\n  normalised_balance_aud.Asset\n", "title": "Asset value over time"}, '', 'https://portfolio.brodie.id.au/')
  </script>
plugins:
  datasette-dashboards:
    portfolio:
      title: Portfolio
      filters: {}
      charts:
        total:
          title: Total value
          db: portfolio
          query: select printf('$%,d', total) as total from change
          library: metric
          display:
            field: total
        change:
          title: Change required to reach target allocation
          db: portfolio
          query: select * from change order by change desc
          library: vega-lite
          display:
            encoding:
              x:
                field: change
                type: quantitative
                stack: null
                axis: null
              y:
                field: asset
                type: nominal
                sort: null
                axis: null
              color:
                value: red
                condition:
                  test: datum.change>0
                  value: limegreen
            layer:
              - mark: bar
              - mark:
                  type: text
                  align:
                    expr: datum.change>0?'right':'left'
                  dx:
                    expr: datum.change>0?-4:4
                encoding:
                  text:
                    field: asset
                  color:
                    value: black
                  x:
                    datum: 0
              - mark:
                  type: text
                  align:
                    expr: datum.change>0?'left':'right'
                  dx:
                    expr: datum.change>0?4:-4
                encoding:
                  text:
                    field: change
                    format: .1%
                  color:
                    value: black
        rebalance:
          title: Actions required to rebalance
          db: portfolio
          query: |
            select
              format('%s', asset) as 'Asset',
              case
                when asset = 'BTC' then format('%.4f', value / price_aud)
                else format('%,d', value / price_aud)
              end as 'Amount',
              format('%.0f %%', target * 100) as 'Target',
              format('%.1f %% ($%,d)', actual * 100, value) as 'Actual',
              format('%.1f %% ($%,d)', change * 100, change_value) as 'Change required',
              case
                -- No actions for cash.
                when asset = 'Cash' then ''
                when change > 0 then format(
                  '<span style="color: limegreen">Buy</span> %s %s',
                  iif(
                    asset = 'BTC',
                    format('%.4f', abs(change_amount)),
                    format('%.0f', abs(change_amount))
                  ),
                  asset,
                  iif(
                    asset = 'BTC',
                    abs(round(change_amount, 5) * price_aud),
                    abs(round(change_amount) * price_aud)
                  )
                )
                else format(
                  '<span style="color: red">Sell</span> %s %s',
                  iif(
                    asset = 'BTC',
                    format('%.4f', abs(change_amount)),
                    format('%.0f', abs(change_amount))
                  ),
                  asset,
                  iif(
                    asset = 'BTC',
                    abs(round(change_amount, 5) * price_aud),
                    abs(round(change_amount) * price_aud)
                  )
                )
              end as 'Action'
            from
              change
            order by
              abs(change) desc
          library: table
        value:
          title: Asset value over time
          db: portfolio
          query: |
            select
              date,
              normalised_balance_aud.asset as Asset,
              round(sum(value_number)) as value,
              target_allocation.rowid as rank
            from
              normalised_balance_aud
              join target_allocation on normalised_balance_aud.asset = target_allocation.asset
            where
              account not like 'Liabilities:StateCustodians:%'
            group by
              date,
              normalised_balance_aud.Asset
          library: vega-lite
          display:
            mark:
              type: area
              opacity: 0.85
            encoding:
              x:
                timeUnit: yearmonthdate
                field: date
                title: Date
              y:
                aggregate: sum
                field: value
                title: Value
                axis:
                  labelExpr: "'$'+datum.label"
              color:
                field: Asset
                scale:
                  scheme: pastel1
                sort:
                  field: rank
                  order: descending
              order:
                field: rank
